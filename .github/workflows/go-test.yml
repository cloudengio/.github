name: go-test

on:
  workflow_call:
    inputs:
      go-versions:
        type: string  
        description: 'Possibly multiple versions to test, as a json multi-line string ["1.15", "1.16"]'
        default: |
          [
            "1.23.x", 
            "1.24.x"
          ]
      os-version: 
        type: string
        default: ubuntu-latest

permissions:
  contents: read

jobs:
  test:
    strategy:
      matrix:
        go-version: ${{ fromJson(inputs.go-versions) }}

    runs-on: ${{ inputs.os-version }}

    steps:
      - name: Set git to use LF
        if: ${{ runner.os == 'windows' }} 
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
 
      - name: Windows mkcert setup
        if: ${{ runner.os == 'windows' }}
        run: |
          choco install mkcert
          mkcert -install

      - name: Linux mkcert
        if: ${{ runner.os == 'linux' }}
        run: |
          sudo apt-get install -y libnss3-tools
 
      - name: macOS mkcert setup
        if: ${{ runner.os == 'macos' }}
        run: |
          brew install mkcert
          mkcert -install
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install tools, mkcert
        run: |
          go install  filippo.io/mkcert@latest
          mkcert -install

      - name: Test
        run: |
          go test --race --covermode=atomic ./...
