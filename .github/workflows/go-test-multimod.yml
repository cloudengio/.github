name: go-test-multimod

on:
  workflow_call:
    inputs:
      go-versions:
        type: string  
        description: 'Possibly multiple versions to test, as a json multi-line string ["1.15", "1.16"]'
        default: |
          [
            "1.23.x", 
            "1.24.x"
          ]
      os-version: 
        type: string
        default: ubuntu-latest

permissions:
  contents: read

jobs:
  test:
    strategy:
      matrix:
        go-version: ${{ fromJson(inputs.go-versions) }}

    runs-on: ${{ inputs.os-version }}

    steps:
        - name: Set git to use LF
          if: ${{ runner.os == 'windows' }} 
          run: |
            git config --global core.autocrlf false
            git config --global core.eol lf

        - name: Windows mkcert setup
          if: ${{ runner.os == 'windows' }}
          run: |
            choco install mkcert
            mkcert -install

        - name: Linux mkcert setup
          if: ${{ runner.os == 'linux' }}
          run: |
            sudo apt-get install -y libnss3-tools

        - name: chrome
          uses: browser-actions/setup-chrome@v2
          id: setup-chrome
          with:
            install-dependencies: true

        - name: init chrome
          run: |
            chrome --version
            chrome --headless=new --disable-gpu --no-sandbox https://google.com
    
        
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version: ${{ matrix.go-version }}
            cache-dependency-path: "**/*.sum"

        - name: Install tools, multimod, mkcert
          run: |
            go install cloudeng.io/citools/multimod@latest
            go install -x filippo.io/mkcert@latest
            mkcert -install
            sudo /home/runner/go/bin/mkcert -install
    
        - name: Test
          env: 
            CHROME_BIN_PATH: ${{ steps.setup-chrome.outputs.chrome-path }} 
          run: multimod --config=.multimod.yaml test
